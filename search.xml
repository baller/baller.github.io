<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux服务器使用Clash verge 教程</title>
      <link href="/2024/09/13/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8Clash-verge-%E6%95%99%E7%A8%8B/"/>
      <url>/2024/09/13/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8Clash-verge-%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="纯命令在Linux上使用Clash-Verge"><a href="#纯命令在Linux上使用Clash-Verge" class="headerlink" title="纯命令在Linux上使用Clash Verge"></a>纯命令在Linux上使用Clash Verge</h1><p>Clash是一款强大的代理工具，广泛用于科学上网和网络请求的管理。本文将详细介绍如何在Linux上通过命令行运行Clash。</p><h2 id="1-安装Clash-Verge"><a href="#1-安装Clash-Verge" class="headerlink" title="1. 安装Clash Verge"></a>1. 安装Clash Verge</h2><p>首先，你需要在Linux上安装Clash。可以通过以下步骤完成安装：</p><h3 id="1-1-下载Clash-Verge"><a href="#1-1-下载Clash-Verge" class="headerlink" title="1.1 下载Clash Verge"></a>1.1 下载Clash Verge</h3><p>前往<a href="https://github.com/zzzgydi/clash-verge/releases">Clash Verge的GitHub页面</a>下载最新版本的Clash。你可以使用<code>wget</code>命令直接下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/Clash.Verge.aarch64.app.tar.gz</span><br></pre></td></tr></table></figure><h3 id="1-2-解压并移动到合适的目录"><a href="#1-2-解压并移动到合适的目录" class="headerlink" title="1.2 解压并移动到合适的目录"></a>1.2 解压并移动到合适的目录</h3><p>下载完成后，解压文件并将其移动到<code>/usr/local/bin</code>目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gunzip Clash.Verge.aarch64.app.tar.gz</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> Clash.Verge.aarch64 /usr/local/bin/clash</span><br></pre></td></tr></table></figure><h3 id="1-3-赋予执行权限"><a href="#1-3-赋予执行权限" class="headerlink" title="1.3 赋予执行权限"></a>1.3 赋予执行权限</h3><p>接下来，为Clash赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/clash</span><br></pre></td></tr></table></figure><p>Clash 运行时需要 Country.mmdb 文件，当第一次启动 Clash 时（使用 .&#x2F;clash 命令） 会自动下载（会下载至 &#x2F;home&#x2F;XXX&#x2F;.config&#x2F;clash 文件夹下）。自动下载可能会因网络原因较慢，可以访问<a href="https://github.com/Dreamacro/maxmind-geoip/releases">该链接</a>手动下载。</p><h2 id="2-配置Clash-Verge"><a href="#2-配置Clash-Verge" class="headerlink" title="2. 配置Clash Verge"></a>2. 配置Clash Verge</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /home/xxx/.config/clash/config.yaml <span class="string">&#x27;订阅链接&#x27;</span></span><br></pre></td></tr></table></figure><p>直接复制windows下的config时要注意把其中的hysteria2全部替换为socks5</p><h2 id="3-Clash-as-a-daemon"><a href="#3-Clash-as-a-daemon" class="headerlink" title="3. Clash as a daemon"></a>3. Clash as a daemon</h2><p>将 Clash 转变为系统服务，从而使得 Clash 实现常驻后台运行、开机自启动等。</p><blockquote><p>普通用户需要 <code>sudo</code> 权限。</p></blockquote><h3 id="3-1-配置-systemd-服务"><a href="#3-1-配置-systemd-服务" class="headerlink" title="3.1 配置 systemd 服务"></a>3.1 配置 systemd 服务</h3><p>创建 systemd 服务配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/systemd/system/clash.service</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Clash daemon, A rule-based proxy in Go.</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/local/bin/clash/clash -d /home/xxx/.config/clash</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="3-2-使用-systemctl"><a href="#3-2-使用-systemctl" class="headerlink" title="3.2 使用 systemctl"></a>3.2 使用 systemctl</h3><p>使用以下命令，让 Clash 开机自启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> clash</span><br></pre></td></tr></table></figure><p>然后开启 Clash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start clash</span><br></pre></td></tr></table></figure><p>查看 Clash 日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status clash</span><br><span class="line"><span class="built_in">sudo</span> journalctl -xe</span><br></pre></td></tr></table></figure><h2 id="4-使用代理"><a href="#4-使用代理" class="headerlink" title="4. 使用代理"></a>4. 使用代理</h2><h3 id="4-1-利用-Export-命令使用代理"><a href="#4-1-利用-Export-命令使用代理" class="headerlink" title="4.1 利用 Export 命令使用代理"></a>4.1 利用 <code>Export</code> 命令使用代理</h3><p>Clash 运行后，其在后台监听某一端口。Ubuntu 下使用代理，需要 <code>export</code> 命令。根据 config 配置文可以查看到Clash代理端口（订阅转换后，端口为7890），设置系统代理命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>可以将该命令添加到 <code>.bashrc</code> 中，登陆后该用户自动开启代理。</p><p>取消系统代理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> http_proxy https_proxy all_proxy</span><br></pre></td></tr></table></figure><h3 id="4-2-DashBoard-外部控制"><a href="#4-2-DashBoard-外部控制" class="headerlink" title="4.2 DashBoard 外部控制"></a>4.2 DashBoard 外部控制</h3><p>外部控制端口为 9090，因此也可以访问该<a href="http://clash.razord.top/">链接</a>，输入 IP 地址（需本机可以访问的 IP）以及端口号 9090，来进入 Clash Dashboard 进行节点的选择。也可以在服务器自行搭建 Clash Dashboard，请参见<a href="https://github.com/Dreamacro/clash-dashboard">该项目</a>。不过 Clash Dashboard 用处不大，使用<strong>订阅转换</strong>后的配置文件包含了自动选择的功能，Clash 会自动选择延迟最低的节点。</p><h3 id="4-3-设置密码"><a href="#4-3-设置密码" class="headerlink" title="4.3 设置密码"></a>4.3 设置密码</h3><p><code>export</code> 命令其他用户执行后也可以使用该代理，此时通过可以更换代理端口、添加密码等措施加以限制。修改 <code>/etc/clash/config.yaml</code> 文件部分配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mixed-port:</span> <span class="number">7890</span></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;用户名1:密码1&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;用户名2:密码2&quot;</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Rule</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="string">:9090</span></span><br></pre></td></tr></table></figure><p><code>mixed-port: 7890</code> 就是混合代理端口，即使用代理时所指定的端口。然后需要重启 Clash，命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart clash</span><br></pre></td></tr></table></figure><p>根据上述配置文件，<code>export</code> 命令变为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://用户名1:密码1@127.0.0.1:7890 http_proxy=http://用户名1:密码1@127.0.0.1:7890 all_proxy=socks5://用户名1:密码1@127.0.0.1:7890</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>本篇博客参考了<a href="https://codeswift.top/posts/linux-clash/">在 Linux 中使用 Clash | CodeSwift</a>。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
